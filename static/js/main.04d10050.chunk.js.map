{"version":3,"sources":["assets/img/adt.svg","assets/img/flipkart.svg","assets/img/playment.svg","assets/img/yourstory.svg","assets/img/honda.svg","assets/img/quotes.svg","components/Head/Head.js","components/Container/Container.js","components/Metric/Metric.js","components/Services/Billing/Billing.js","components/Services/Ecto/Ecto.js","components/Services/Reserved/Reserves.js","components/Services/Autoscale/Autoscale.js","components/Services/Idle/Idle.js","components/Services/Services.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","head","props","className","container","src","Adt","alt","Honda","Playment","Yourstory","Flipkart","metric","style","fontFamily","color","fontSize","fontWeight","lineHeight","Quotes","marginLeft","billing","services","Ecto","Autoscale","Idle","App","Services","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04d10050.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/adt.f1be2b44.svg\";","module.exports = __webpack_public_path__ + \"static/media/flipkart.7c01bfc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/playment.e19de7ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/yourstory.bf876d81.svg\";","module.exports = __webpack_public_path__ + \"static/media/honda.77d9431c.svg\";","module.exports = __webpack_public_path__ + \"static/media/quotes.091d3fcc.svg\";","import React from 'react'\r\nimport './Head.css'\r\n\r\nconst head = (props) =>(\r\n    <div className = \"head\">\r\n        <div className = \"head-left\">\r\n            <div className = \"subhead\">\r\n                Reliability is never an accident.\r\n            </div>\r\n            <h2>\r\n            Incident Response - The SRE Way.\r\n            </h2>\r\n            \r\n            <div className = \"content\">\r\n                Uplevel your Incident Management with\r\n                the next generation Reliability Orchestration \r\n                Engine based on Site Reliability Engineering (SRE)\r\n            </div>\r\n            \r\n            <div className = \"btn\">\r\n            <button>Try it for free</button>\r\n            <button>Schedule a demo</button>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n        <div className = \"head-right\">\r\n\r\n        </div>\r\n\r\n    </div>\r\n)\r\n\r\nexport default head;","import React from 'react'\r\nimport './Container.css'\r\nimport Adt from '../../assets/img/adt.svg'\r\nimport Flipkart from '../../assets/img/flipkart.svg'\r\nimport Playment from '../../assets/img/playment.svg'\r\nimport Yourstory from '../../assets/img/yourstory.svg'\r\nimport Honda from '../../assets/img/honda.svg'\r\n\r\n\r\nconst container = (props) => (\r\n    <div className = \"container\">\r\n        <h1>You’re in good company.</h1>\r\n        <div className = \"line\">\r\n        <p>THE GOLD STANDARD FOR MODERN INCIDENT MANAGEMENT</p>\r\n        <div className = \"companies\">\r\n            <img src = {Adt} alt = \"Adt\"/>\r\n            <img src = {Honda} alt = \"honda\"/>\r\n            <img src = {Playment} alt = \"playment\"/>\r\n            <img src = {Yourstory} alt = \"yourstory\"/>\r\n            <img src = {Flipkart} alt = \"flipkart\"/>\r\n        </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default container;\r\n","import React from 'react'\r\nimport './Metric.css'\r\nimport Quotes from '../../assets/img/quotes.svg'\r\n\r\nconst metric = (props) => (\r\n    <div className = \"metric\">\r\n        <div className = \"metric-left\">\r\n            <h1 style = {{fontFamily: \"Metropolis,sans-serif\",\r\n                color: \"#0d2149\",\r\n                fontSize: \"32px\",\r\n                fontWeight:\"900\",\r\n                lineHeight: \"0px\"}}\r\n                >700,000+</h1>\r\n            <p style = {{color: \"rgba(13,33,73,.6)\",fontSize:\"28px\"}}>critical incidents processed</p>\r\n            <div className = \"metric-left-content\">\r\n            Tools that helps your team get better with every incident\r\n            </div>\r\n        </div>\r\n\r\n        <div className = \"metric-right\">\r\n            \r\n                <img src = {Quotes} alt = \"66\"/>\r\n            <div className = \"metric-right-content\">\r\n                Squadcast applies innovative product design to enable true transparency\r\n                and minimize friction in the incident response process. It really is time\r\n                for SREs to have the right tool set that supports them in their mission.\r\n            </div>\r\n            <h4 style = {{fontSize:\"18px\" ,marginLeft:\"27%\"}}>Sethu Vinaitheerthan</h4>\r\n            <p style = {{fontSize:\"16px\",marginLeft:\"27%\",lineHeight:\"0px\"}}>Director of Engineering at Zenefits</p>\r\n        </div>        \r\n    </div>\r\n)\r\n\r\nexport default metric;","import React from 'react'\r\nimport './Billing.css'\r\n\r\nconst billing = (props) => (\r\n    <div className = \"billing bgcolor\">\r\n        <div className = \"service-title\">End the Complication of AWS Billing</div>\r\n        <div className = \"billing-container\">\r\n            <div className = \"billing-left\">\r\n\r\n            </div>\r\n            <div className = \"billing-right\">\r\n                <div className = \"billing-first\">\r\n                    <div className = \"billing-head\">Total Cost Dashboard</div>\r\n                    <div className = \"billing-content\"> When using the AWS services cost report, \r\n                        you can easily see all of your costs at a glance\r\n                        with 4 dashboard widgets.</div>\r\n\r\n\r\n                </div>\r\n                <div className = \"billing-first\">\r\n                <div className = \"billing-head\">AWS Services Cost</div>\r\n                    <div className = \"billing-content\"> A full breakdown of your AWS Services, \r\n                    sortable by: Service, Total Cost, Comparison Period Cost, Delta, and \r\n                    Delta %..</div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n)\r\n\r\nexport default billing","import React from 'react'\r\nimport '../Billing/Billing.css'\r\n\r\nconst billing = (props) => (\r\n    <div className = \"billing\">\r\n        <div className = \"service-title\">Find The Perfect EC2 For Any Scenario</div>\r\n        <div className = \"billing-container\">\r\n            <div className = \"billing-left\">\r\n            <div className = \"billing-first\">\r\n                    <div className = \"billing-head\">EC2 Recommendation</div>\r\n                    <div className = \"billing-content\"> We analyze EC2s resource utilization\r\n                     (ex. CPU, memory) to give recommendations for right-sizing your instances.</div>\r\n\r\n\r\n                </div>\r\n                <div className = \"billing-first\">\r\n                <div className = \"billing-head\">Utilization Box-plot</div>\r\n                    <div className = \"billing-content\"> Visualize utilization of \r\n                    AWS elements, making it easy to identify where your environment\r\n                     is over- or under-provisioned.</div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className = \"billing-right\">\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n)\r\n\r\nexport default billing","import React from 'react'\r\nimport '../Billing/Billing.css'\r\n\r\nconst billing = (props) => (\r\n    <div className = \"billing bgcolor\">\r\n        <div className = \"service-title\">Plan Reserved Instances</div>\r\n        <div className = \"billing-container\">\r\n            <div className = \"billing-left\">\r\n            \r\n            </div>\r\n            <div className = \"billing-right\">\r\n            <div className = \"billing-first\">\r\n                    <div className = \"billing-head\">We analyze your usage on an hourly basis so you won’t overbuy reservations.</div>\r\n                    <div className = \"billing-content\"> \r\n                    <ul>\r\n                        <li>\r\n                        Get recommendation for RI purchases.\r\n                        </li>\r\n                        <li>\r\n                        Visualize historic usage data, with filters, groups and tags.\r\n                        </li>\r\n                        <li>\r\n                        Hourly usage data used to avoid costly overbuying mistakes. Learn More\r\n                        </li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n)\r\n\r\nexport default billing","import React from 'react'\r\nimport '../Billing/Billing.css'\r\n\r\nconst billing = (props) => (\r\n    <div className = \"billing\">\r\n        <div className = \"service-title\">Fine Tune Auto-Scaling-Groups</div>\r\n        <div className = \"billing-container\">\r\n            <div className = \"billing-left\">\r\n            <div className = \"billing-first\">\r\n                    <div className = \"billing-head\">Get tuning\r\n                     suggestions to fit your risk tolerance with cost-savings for each “what-if” scenario.</div>\r\n                    <div className = \"billing-content\">\r\n                    <ul>\r\n                        <li>\r\n                        See historical ASG instance count with utilization.\r\n                        </li>\r\n                        <li>\r\n                        Receive hourly web-hooks to trigger changes.\r\n                        </li>\r\n                        \r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className = \"billing-right\">\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n)\r\n\r\nexport default billing","import React from 'react'\r\nimport '../Billing/Billing.css'\r\n\r\nconst billing = (props) => (\r\n    <div className = \"billing bgcolor\">\r\n        <div className = \"service-title\">Uncover Idle Resources</div>\r\n        <div className = \"billing-container\">\r\n            <div className = \"billing-left\">\r\n            \r\n            </div>\r\n            <div className = \"billing-right\">\r\n            <div className = \"billing-first\">\r\n                    <div className = \"billing-head\">Find unused AWS resources that are costing you money.</div>\r\n                    <div className = \"billing-content\"> \r\n                    <ul>\r\n                        <li>\r\n                        See EBS volumes attached to a stopped EC2\r\n                        </li>\r\n                        <li>\r\n                        See EBS volumes not attached to an EC2\r\n                        </li>\r\n                        <li>\r\n                        Receive an emailed report.\r\n                        </li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n)\r\n\r\nexport default billing","import React from 'react'\r\nimport Billing from './Billing/Billing'\r\nimport Ecto from './Ecto/Ecto';\r\nimport Reserve from './Reserved/Reserves';\r\nimport Autoscale from './Autoscale/Autoscale'\r\nimport Idle from './Idle/Idle'\r\n\r\n\r\nconst services = (props) => (\r\n    <div className = \"services\">\r\n        <Billing />\r\n        <Ecto />\r\n        <Reserve />\r\n        <Autoscale />\r\n        <Idle />\r\n\r\n    </div>\r\n)\r\n\r\nexport default services\r\n","import React from 'react';\nimport Head from './components/Head/Head'\nimport Container from './components/Container/Container'\nimport Metric from './components/Metric/Metric'\nimport Services from './components/Services/Services'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Head />\n      <Container />\n      <Metric />\n      <Services />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}